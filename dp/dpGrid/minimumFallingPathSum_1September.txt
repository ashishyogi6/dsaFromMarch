//Leetcode
//done by self

int minFallingPathSum(vector<vector<int>>& matrix) {
        int n=matrix.size();
        int dp[n][n];
        for(int i=0;i<n;i++) dp[0][i]=matrix[0][i];
        for(int i=1;i<n;i++){
            for(int j=0;j<n;j++){
                if(j==0) dp[i][j]=matrix[i][j]+min(dp[i-1][j],dp[i-1][j+1]);
                else if(j==n-1) dp[i][j]=matrix[i][j]+min(dp[i-1][j],dp[i-1][j-1]);
                else dp[i][j]=matrix[i][j]+min(min(dp[i-1][j-1],dp[i-1][j]),dp[i-1][j+1]);
            }
        }
        int ans=INT_MAX;
        for(int i=0;i<n;i++)    if(dp[n-1][i]<ans) ans=dp[n-1][i];
        return ans;
    }
