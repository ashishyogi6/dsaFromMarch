//Leetcode

// we just found a pattern that when we match we just don't do anything 
// but when we don't match we choose minimum of three operations



int minDistance(string text1, string text2) {
        int n=text1.size(),m=text2.size();
        int dp[n+1][m+1];
        for(int i=0;i<=n;i++) dp[i][0]=i;
        for(int i=0;i<=m;i++) dp[0][i]=i;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(text1[i-1]==text2[j-1]) dp[i][j]=dp[i-1][j-1];
                else dp[i][j]=1+min(min(dp[i-1][j-1],dp[i][j-1]),dp[i-1][j]);
            }
        }
        return dp[n][m];
    }
