target sum has a property:
let target is (a+b-c+d-e) then it is sure that total_sum is (a+b+c+d+e) and we can say (a+b+d)=s1 and (c+e)=s2 / so s1+s2=sum.
  now we have to count how many such pairs exist.

  now question goes on to question (count number of subset with given sum) and we will count both subset with s1 and s2 and return that .


  int findTargetSumWays(vector<int>& nums, int target) {
        int sum=0;
        for(int i=0;i<nums.size();i++) sum+=nums[i];
        if(sum<target || (sum-target)%2==1) return 0;
        int n=nums.size()+1,s=sum+1;
        int dp[n][s];
        for(int i=1;i<s;i++) dp[0][i]=0;
        dp[0][0]=1;

        for(int i=1;i<n;i++){
            for(int j=0;j<s;j++){
                if(nums[i-1]<=j) dp[i][j]=dp[i-1][j]+dp[i-1][j-nums[i-1]];
                else dp[i][j]=dp[i-1][j];
            }
        }
        if((sum+target)/2<0) return 0;
        return dp[n-1][(sum+target)/2];
    }

question is all about count subset with sum k
  just one line and return ans.
