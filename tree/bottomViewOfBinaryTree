

vector <int> bottomView(Node *root) {
        map<int,int> m;
        solve(root,m);
        vector<int> v1;
        for(auto i:m) v1.push_back(i.second);
        return v1;
    }
    void solve(Node* root,map<int,int> &m){
        queue<pair<Node*,int>> q;
        q.push(make_pair(root,0));
        while(!q.empty()){
            int size=q.size();
            for(int i=0;i<size;i++){
                if(q.front().first->left) q.push(make_pair(q.front().first->left,q.front().second-1));
                if(q.front().first->right) q.push(make_pair(q.front().first->right,q.front().second+1));
                m[q.front().second]=q.front().first->data;
                q.pop();
            }
        }
    }
