// completely from striver

bool dfs(int node,int col,int color[],vector<vector<int>>& adj){
        color[node]=col;
        for(auto it:adj[node]){
            if(color[it]==-1){
                if(dfs(it,!col,color,adj)==false) return false;
            }
            else if(color[it]==col) return false;
        }
        return true;
    }
    bool isBipartite(vector<vector<int>>& graph) {
        // vector<int> adj[graph.size()];
        // for(int i=0;i<graph.size();i++){
        //     for(int j=0;j<graph[i].size();j++){
        //         if(i==j) continue;
        //         adj[i].push_back(j);
        //     }
        // }
        int color[graph.size()];
        for(int i=0;i<graph.size();i++) color[i]=-1;
        for(int i=0;i<graph.size();i++){
            if(color[i]==-1){
                if(dfs(i,0,color,graph)==false) return false;
            }
        }
        return true;
